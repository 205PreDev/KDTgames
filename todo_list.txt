### 해결할 문제 목록

1.  **피부색 동기화:** 모든 플레이어의 캐릭터가 동일한 피부색으로 보이도록 수정합니다.
2.  **장착 무기 동기화:** 한 플레이어가 무기를 장착하면, 다른 플레이어들에게도 해당 무기가 장착된 모습이 보이도록 수정합니다.
3.  **월드 무기 동기화:** 플레이어가 땅에 떨어진 무기를 주우면, 다른 모든 플레이어의 게임 화면에서도 해당 무기가 사라지도록 동기화합니다.

---

### 세부 작업 계획

#### 1. 피부색 동기화 문제 해결
- **원인 분석:** 현재 `player.js`의 `LoadModel_` 함수 내에서, 로컬 플레이어(`isRemote`가 `false`인 경우)의 모델에만 `color.offsetHSL`을 적용하여 피부색을 미세하게 변경하는 코드가 있습니다. 이 때문에 내 캐릭터와 다른 사람의 캐릭터 색상이 다르게 보입니다.
- **해결 방안:**
    1. `player.js` 파일에서 로컬 플레이어의 색상을 변경하는 아래 코드를 찾아 제거하겠습니다.
        ```javascript
        if (c.material && !this.isRemote) {
          c.material.color.offsetHSL(0, 0, 0.25);
        }
        ```

#### 2. 장착 무기 동기화 문제 해결
- **원인 분석:** `playerState`를 통해 무기 장착 정보가 서버로 전송되고 다른 클라이언트에 브로드캐스트는 되지만, 정작 클라이언트 측(`main.js` 또는 `player.js`)에서 이 정보를 받아 원격 플레이어의 모델에 무기를 시각적으로 장착하는 로직이 구현되어 있지 않습니다.
- **해결 방안:**
    1. `player.js`의 `UpdateRemoteState` 함수를 수정합니다.
    2. 서버로부터 받은 `state.weapon` 데이터가 있는지 확인합니다.
    3. 현재 원격 플레이어가 장착한 무기와 서버에서 받은 무기 정보가 다를 경우, `EquipItem` 함수를 호출하여 원격 플레이어의 모델에 무기를 장착하거나 해제하는 로직을 추가하겠습니다.

#### 3. 월드 무기 동기화 문제 해결
- **원인 분석:** 현재 무기 생성 및 아이템 줍기 로직이 각 클라이언트에서 개별적으로 처리되고 있습니다. 한 플레이어가 무기를 주워도 이 정보가 서버를 통해 다른 플레이어들에게 공유되지 않아, 다른 화면에서는 무기가 그대로 남아있게 됩니다.
- **해결 방안:** (서버 중심 로직으로 변경)
    1. **(서버)** `server.js`를 수정하여, 방이 생성될 때 서버가 직접 무기들의 상태(위치, 종류 등)를 관리하도록 `rooms[roomId].weapons` 배열을 추가합니다.
    2. **(클라이언트)** `main.js`를 수정하여, 게임 시작 시 서버로부터 `initializeWeapons` 이벤트를 받아 서버가 정해준 위치에 무기를 생성하도록 변경합니다. (클라이언트의 랜덤 생성 로직 제거)
    3. **(클라이언트)** `player.js`의 `PickupWeapon_` 함수를 수정합니다. 플레이어가 무기 획득을 시도하면, 로컬에서 바로 처리하는 대신 `requestPickupWeapon` 이벤트를 서버로 전송합니다.
    4. **(서버)** `server.js`가 `requestPickupWeapon` 이벤트를 받으면, 해당 무기가 수집 가능한지 확인하고, 가능하다면 `rooms[roomId].weapons`에서 제거한 뒤, 방에 있는 모든 클라이언트에게 `weaponPickedUp` 이벤트를 브로드캐스트합니다.
    5. **(클라이언트)** `main.js`에서 `weaponPickedUp` 이벤트를 수신하면, 모든 클라이언트가 자신의 씬(scene)에서 해당 무기 모델을 제거합니다.