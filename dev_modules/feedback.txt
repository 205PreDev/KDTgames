## 현재 문제점

1.  **원거리 투사체 시각화 문제:** 원거리 공격 시 투사체(노란색 구체)가 3번까지만 보이고 그 이후에는 보이지 않습니다. 이는 투사체 풀링 시스템에서 재사용되는 투사체의 디버그 메쉬가 제대로 초기화되거나 다시 활성화되지 않기 때문으로 보입니다.

2.  **NPC 피해 미적용 문제:** 원거리 공격 시 NPC가 피해를 입지 않습니다. 가능한 원인은 다음과 같습니다:
    *   NPC의 `hitRadius`가 너무 작거나 0으로 설정되어 투사체와 충돌하지 않을 수 있습니다.
    *   NPC의 `canTakeDamage()` 함수가 항상 `false`를 반환하여 피해를 받을 수 없는 상태일 수 있습니다.
    *   `attackSystem.update` 함수로 전달되는 `npcs` 배열에 실제 피해를 입어야 할 NPC가 포함되어 있지 않을 수 있습니다.
    *   무기의 `damage` 값이 0이거나 매우 작을 수 있습니다.

## 해결 계획

1.  **투사체 시각화 문제 해결:**
    *   `attackSystem.js` 파일의 `getProjectile` 함수를 수정합니다. 투사체를 풀에서 재사용할 때, 기존의 `debugMesh`를 씬에서 제거하고 새로운 `debugMesh`를 생성하여 씬에 다시 추가하도록 합니다. 또는 `meleeProjectile.js`의 `destroy()` 함수에서 `debugMesh`를 씬에서 완전히 제거하는 대신 `visible = false`로 설정하고, `getProjectile`에서 `visible = true`로 설정하도록 변경하는 방법도 고려할 수 있습니다.

2.  **NPC 피해 미적용 문제 해결:**
    *   **1단계: `object.js` (NPC 클래스) 확인:**
        *   NPC 클래스 내의 `hitRadius` 속성 값을 확인하여 적절한지 검토합니다.
        *   `canTakeDamage()` 메서드의 구현을 확인하여 NPC가 피해를 받지 못하게 하는 조건(예: `isDead_` 또는 `isHit_` 플래그)이 있는지 확인합니다.
        *   `TakeDamage()` 메서드가 올바르게 피해를 적용하는지 확인합니다.
    *   **2단계: `main.js` 확인:**
        *   `main.js`에서 `player.attackSystem.update()` 함수로 전달되는 `npcs` 배열에 활성화된 NPC들이 올바르게 포함되어 있는지 확인합니다.
    *   **3단계: `weapon_system.js` 확인:**
        *   원거리 무기의 `damage` 값이 0이거나 너무 작게 설정되어 있지 않은지 확인합니다.

먼저 투사체 시각화 문제를 해결하기 위해 `attackSystem.js`를 수정하고, 그 다음 NPC 피해 문제를 진단하기 위해 `object.js`를 확인하는 순서로 진행하겠습니다.